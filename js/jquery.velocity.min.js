/*!
 * Velocity.js: Accelerated JavaScript animation.
 * @version 0.0.13
 * @docs http://velocityjs.org
 * @license Copyright 2014 Julian Shapiro. MIT License: http://en.wikipedia.org/wiki/MIT_License
 */
! function(a, b, c, d) {
    function e(a) {
        for (var b = -1, c = a ? a.length : 0, d = []; ++b < c;) {
            var e = a[b];
            e && d.push(e)
        }
        return d
    }

    function f(a) {
        return "[object Function]" === Object.prototype.toString.call(a)
    }

    function g(a) {
        return "[object Array]" === Object.prototype.toString.call(a)
    }

    function h(a) {
        var b = Object.prototype.toString.call(a);
        return "object" == typeof a && /^\[object (HTMLCollection|NodeList|Object)\]$/.test(b) && a.length !== d && (0 === a.length || "object" == typeof a[0] && a[0].nodeType > 0)
    }

    function i(a, b, c, d) {
        function e(a, b) {
            return 1 - 3 * b + 3 * a
        }

        function f(a, b) {
            return 3 * b - 6 * a
        }

        function g(a) {
            return 3 * a
        }

        function h(a, b, c) {
            return ((e(b, c) * a + f(b, c)) * a + g(b)) * a
        }

        function i(a, b, c) {
            return 3 * e(b, c) * a * a + 2 * f(b, c) * a + g(b)
        }

        function j(b) {
            for (var d = b, e = 0; 8 > e; ++e) {
                var f = i(d, a, c);
                if (0 === f) return d;
                var g = h(d, a, c) - b;
                d -= g / f
            }
            return d
        }
        if (4 !== arguments.length) return !1;
        for (var k = 0; 4 > k; ++k)
            if ("number" != typeof arguments[k] || isNaN(arguments[k]) || !isFinite(arguments[k])) return !1;
        a = Math.min(a, 1), c = Math.min(c, 1), a = Math.max(a, 0), c = Math.max(c, 0);
        var l = function(e) {
            return a === b && c === d ? e : h(j(e), b, d)
        };
        return l
    }

    function j(a, b, c) {
        function d(a) {
            return -a.tension * a.x - a.friction * a.v
        }

        function e(a, b, c) {
            var e = {
                x: a.x + c.dx * b,
                v: a.v + c.dv * b,
                tension: a.tension,
                friction: a.friction
            };
            return {
                dx: e.v,
                dv: d(e)
            }
        }

        function f(a, b) {
            var c = {
                dx: a.v,
                dv: d(a)
            }, f = e(a, .5 * b, c),
                g = e(a, .5 * b, f),
                h = e(a, b, g),
                i = 1 / 6 * (c.dx + 2 * (f.dx + g.dx) + h.dx),
                j = 1 / 6 * (c.dv + 2 * (f.dv + g.dv) + h.dv);
            return a.x = a.x + i * b, a.v = a.v + j * b, a
        }
        var g, h, i, k = {
                x: -1,
                v: 0,
                tension: null,
                friction: null
            }, l = [0],
            m = 0,
            n = 1e-4,
            o = .016;
        for (a = parseFloat(a) || 600, b = parseFloat(b) || 20, c = c || null, k.tension = a, k.friction = b, g = null !== c, g ? (m = j(a, b), h = m / c * o) : h = o;;)
            if (i = f(i || k, h), l.push(1 + i.x), m += 16, !(Math.abs(i.x) > n && Math.abs(i.v) > n)) break;
        return g ? function(a) {
            return l[a * (l.length - 1) | 0]
        } : m
    }

    function k(a, b) {
        var c = a;
        return "string" == typeof a ? r.Easings[a] || (c = !1) : g(a) && 2 === a.length ? (a.push(b), c = j.apply(null, a)) : c = g(a) && 4 === a.length ? i.apply(null, a) : !1, c === !1 && (c = r.Easings[r.defaults.easing] ? r.defaults.easing : "swing"), c
    }

    function l(a) {
        if (a)
            for (var b = (new Date).getTime(), c = 0, e = r.State.calls.length; e > c; c++)
                if (r.State.calls[c]) {
                    var f = r.State.calls[c],
                        g = f[0],
                        h = f[2],
                        i = f[3];
                    i || (i = r.State.calls[c][3] = b - 16);
                    for (var j = Math.min((b - i) / h.duration, 1), k = 0, o = g.length; o > k; k++) {
                        var t = g[k],
                            u = t.element;
                        if (q.data(u, n)) {
                            var v = !1;
                            h.display && "none" !== h.display && s.setPropertyValue(u, "display", h.display);
                            for (var w in t)
                                if ("element" !== w) {
                                    var x, y = t[w],
                                        z = "string" == typeof y.easing ? r.Easings[y.easing] : y.easing;
                                    if (x = 1 === j ? y.endValue : y.startValue + (y.endValue - y.startValue) * z(j), y.currentValue = x, s.Hooks.registered[w]) {
                                        var A = s.Hooks.getRoot(w),
                                            B = q.data(u, n).rootPropertyValueCache[A];
                                        B && (y.rootPropertyValue = B)
                                    }
                                    var C = s.setPropertyValue(u, w, y.currentValue + (0 === parseFloat(x) ? "" : y.unitType), y.rootPropertyValue, y.scrollData);
                                    s.Hooks.registered[w] && (q.data(u, n).rootPropertyValueCache[A] = s.Normalizations.registered[A] ? s.Normalizations.registered[A]("extract", null, C[1]) : C[1]), "transform" === C[0] && (v = !0)
                                }
                            h.mobileHA && q.data(u, n).transformCache.translate3d === d && (q.data(u, n).transformCache.translate3d = "(0, 0, 0)", v = !0), v && s.flushTransformCache(u)
                        }
                    }
                    h.display && "none" !== h.display && (r.State.calls[c][2].display = !1), 1 === j && m(c)
                }
        r.State.isTicking && p(l)
    }

    function m(a) {
        for (var b = r.State.calls[a][0], c = r.State.calls[a][1], e = r.State.calls[a][2], f = !1, g = 0, h = b.length; h > g; g++) {
            var i = b[g].element;
            if ("none" !== e.display || e.loop || s.setPropertyValue(i, "display", e.display), q.queue(i)[1] !== d && /\.velocityQueueEntryFlag/i.test(q.queue(i)[1]) || q.data(i, n) && (q.data(i, n).isAnimating = !1, q.data(i, n).rootPropertyValueCache = {}, e.mobileHA && !r.State.isGingerbread && (delete q.data(i, n).transformCache.translate3d, s.flushTransformCache(i))), g === h - 1 && !e.loop && e.complete) {
                var j = c.jquery ? c.get() : c;
                e.complete.call(j, j)
            }
            e.queue !== !1 && q.dequeue(i, e.queue)
        }
        r.State.calls[a] = !1;
        for (var k = 0, l = r.State.calls.length; l > k; k++)
            if (r.State.calls[k] !== !1) {
                f = !0;
                break
            }
        f === !1 && (r.State.isTicking = !1, delete r.State.calls, r.State.calls = [])
    }
    var n = "velocity",
        o = function() {
            if (c.documentMode) return c.documentMode;
            for (var a = 7; a > 4; a--) {
                var b = c.createElement("div");
                if (b.innerHTML = "<!--[if IE " + a + "]><span></span><![endif]-->", b.getElementsByTagName("span").length) return b = null, a
            }
            return d
        }(),
        p = b.requestAnimationFrame || function() {
            var a = 0;
            return b.webkitRequestAnimationFrame || b.mozRequestAnimationFrame || function(b) {
                var c, d = (new Date).getTime();
                return c = Math.max(0, 16 - (d - a)), a = d + c, setTimeout(function() {
                    b(d + c)
                }, c)
            }
        }();
    if (7 >= o) {
        if (b.jQuery) return void(b.jQuery.fn.velocity = b.jQuery.fn.animate);
        throw new Error("For IE<=7, Velocity falls back to jQuery, which must first be loaded.")
    }
    if (8 === o && !b.jQuery) throw new Error("For IE8, Velocity requires jQuery to be loaded.");
    if (a.Velocity !== d && !a.Velocity.Utilities) throw new Error("Velocity's namespace is occupied. Aborting.");
    var q = b.jQuery || a.Velocity.Utilities,
        r = a.Velocity = a.velocity = q.extend(a.Velocity || {}, {
            State: {
                isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
                isAndroid: /Android/i.test(navigator.userAgent),
                isGingerbread: /Android 2\.3\.[3-7]/i.test(navigator.userAgent),
                prefixElement: c.createElement("div"),
                prefixMatches: {},
                scrollAnchor: null,
                scrollPropertyLeft: null,
                scrollPropertyTop: null,
                isTicking: !1,
                calls: []
            },
            CSS: {},
            Sequences: {},
            Easings: {},
            defaults: {
                queue: "",
                duration: 400,
                easing: "swing",
                complete: null,
                display: null,
                loop: !1,
                delay: !1,
                mobileHA: !0,
                _cacheValues: !0
            },
            animate: function() {},
            debug: !1
        });
    b.pageYOffset !== d ? (r.State.scrollAnchor = b, r.State.scrollPropertyLeft = "pageXOffset", r.State.scrollPropertyTop = "pageYOffset") : (r.State.scrollAnchor = c.documentElement || c.body.parentNode || c.body, r.State.scrollPropertyLeft = "scrollLeft", r.State.scrollPropertyTop = "scrollTop"),
    function() {
        var a = {};
        q.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(b, c) {
            a[c] = function(a) {
                return Math.pow(a, b + 2)
            }
        }), q.extend(a, {
            Sine: function(a) {
                return 1 - Math.cos(a * Math.PI / 2)
            },
            Circ: function(a) {
                return 1 - Math.sqrt(1 - a * a)
            },
            Elastic: function(a) {
                return 0 === a || 1 === a ? a : -Math.pow(2, 8 * (a - 1)) * Math.sin((80 * (a - 1) - 7.5) * Math.PI / 15)
            },
            Back: function(a) {
                return a * a * (3 * a - 2)
            },
            Bounce: function(a) {
                for (var b, c = 4; a < ((b = Math.pow(2, --c)) - 1) / 11;);
                return 1 / Math.pow(4, 3 - c) - 7.5625 * Math.pow((3 * b - 2) / 22 - a, 2)
            }
        }), q.each(a, function(a, b) {
            r.Easings["easeIn" + a] = b, r.Easings["easeOut" + a] = function(a) {
                return 1 - b(1 - a)
            }, r.Easings["easeInOut" + a] = function(a) {
                return .5 > a ? b(2 * a) / 2 : 1 - b(-2 * a + 2) / 2
            }
        }), r.Easings.linear = function(a) {
            return a
        }, r.Easings.swing = function(a) {
            return .5 - Math.cos(a * Math.PI) / 2
        }, r.Easings.ease = i(.25, .1, .25, 1), r.Easings["ease-in"] = i(.42, 0, 1, 1), r.Easings["ease-out"] = i(0, 0, .58, 1), r.Easings["ease-in-out"] = i(.42, 0, .58, 1), r.Easings.spring = function(a) {
            return 1 - Math.cos(4.5 * a * Math.PI) * Math.exp(6 * -a)
        }
    }();
    var s = r.CSS = {
        RegEx: {
            valueUnwrap: /^[A-z]+\((.*)\)$/i,
            wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,
            valueSplit: /([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/gi
        },
        Hooks: {
            templates: {
                color: ["Red Green Blue Alpha", "255 255 255 1"],
                backgroundColor: ["Red Green Blue Alpha", "255 255 255 1"],
                borderColor: ["Red Green Blue Alpha", "255 255 255 1"],
                borderTopColor: ["Red Green Blue Alpha", "255 255 255 1"],
                borderRightColor: ["Red Green Blue Alpha", "255 255 255 1"],
                borderBottomColor: ["Red Green Blue Alpha", "255 255 255 1"],
                borderLeftColor: ["Red Green Blue Alpha", "255 255 255 1"],
                outlineColor: ["Red Green Blue Alpha", "255 255 255 1"],
                textShadow: ["Color X Y Blur", "black 0px 0px 0px"],
                boxShadow: ["Color X Y Blur Spread", "black 0px 0px 0px 0px"],
                clip: ["Top Right Bottom Left", "0px 0px 0px 0px"],
                backgroundPosition: ["X Y", "0% 0%"],
                transformOrigin: ["X Y Z", "50% 50% 0%"],
                perspectiveOrigin: ["X Y", "50% 50%"]
            },
            registered: {},
            register: function() {
                var a, b, c;
                if (o)
                    for (a in s.Hooks.templates) {
                        b = s.Hooks.templates[a], c = b[0].split(" ");
                        var d = b[1].match(s.RegEx.valueSplit);
                        "Color" === c[0] && (c.push(c.shift()), d.push(d.shift()), s.Hooks.templates[a] = [c.join(" "), d.join(" ")])
                    }
                for (a in s.Hooks.templates) {
                    b = s.Hooks.templates[a], c = b[0].split(" ");
                    for (var e in c) {
                        var f = a + c[e],
                            g = e;
                        s.Hooks.registered[f] = [a, g]
                    }
                }
            },
            getRoot: function(a) {
                var b = s.Hooks.registered[a];
                return b ? b[0] : a
            },
            cleanRootPropertyValue: function(a, b) {
                return s.RegEx.valueUnwrap.test(b) && (b = b.match(s.Hooks.RegEx.valueUnwrap)[1]), s.Values.isCSSNullValue(b) && (b = s.Hooks.templates[a][1]), b
            },
            extractValue: function(a, b) {
                var c = s.Hooks.registered[a];
                if (c) {
                    var d = c[0],
                        e = c[1];
                    return b = s.Hooks.cleanRootPropertyValue(d, b), b.toString().match(s.RegEx.valueSplit)[e]
                }
                return b
            },
            injectValue: function(a, b, c) {
                var d = s.Hooks.registered[a];
                if (d) {
                    var e, f, g = d[0],
                        h = d[1];
                    return c = s.Hooks.cleanRootPropertyValue(g, c), e = c.toString().match(s.RegEx.valueSplit), e[h] = b, f = e.join(" ")
                }
                return c
            }
        },
        Normalizations: {
            registered: {
                clip: function(a, b, c) {
                    switch (a) {
                        case "name":
                            return "clip";
                        case "extract":
                            var d;
                            return s.RegEx.wrappedValueAlreadyExtracted.test(c) ? d = c : (d = c.toString().match(s.RegEx.valueUnwrap), d && (d = d[1].replace(/,(\s+)?/g, " "))), d;
                        case "inject":
                            return "rect(" + c + ")"
                    }
                },
                opacity: function(a, b, c) {
                    if (8 >= o) switch (a) {
                        case "name":
                            return "filter";
                        case "extract":
                            var d = c.toString().match(/alpha\(opacity=(.*)\)/i);
                            return c = d ? d[1] / 100 : 1;
                        case "inject":
                            return b.style.zoom = 1, parseFloat(c) >= 1 ? "" : "alpha(opacity=" + parseInt(100 * parseFloat(c), 10) + ")"
                    } else switch (a) {
                        case "name":
                            return "opacity";
                        case "extract":
                            return c;
                        case "inject":
                            return c
                    }
                }
            },
            register: function() {
                function a(a) {
                    var b, c = /^#?([a-f\d])([a-f\d])([a-f\d])$/i,
                        d = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;
                    return a = a.replace(c, function(a, b, c, d) {
                        return b + b + c + c + d + d
                    }), b = d.exec(a), b ? "rgb(" + (parseInt(b[1], 16) + " " + parseInt(b[2], 16) + " " + parseInt(b[3], 16)) + ")" : "rgb(0 0 0)"
                }
                var b = ["translateX", "translateY", "scale", "scaleX", "scaleY", "skewX", "skewY", "rotateZ"];
                9 >= o || (b = b.concat(["transformPerspective", "translateZ", "scaleZ", "rotateX", "rotateY"]));
                for (var c = 0, e = b.length; e > c; c++)! function() {
                    var a = b[c];
                    s.Normalizations.registered[a] = function(b, c, e) {
                        switch (b) {
                            case "name":
                                return "transform";
                            case "extract":
                                return q.data(c, n).transformCache[a] === d ? /^scale/i.test(a) ? 1 : 0 : q.data(c, n).transformCache[a].replace(/[()]/g, "");
                            case "inject":
                                var f = !1;
                                switch (a.substr(0, a.length - 1)) {
                                    case "translate":
                                        f = !/(%|px|em|rem|\d)$/i.test(e);
                                        break;
                                    case "scal":
                                    case "scale":
                                        r.State.isAndroid && q.data(c, n).transformCache[a] === d && (e = 1), f = !/(\d)$/i.test(e);
                                        break;
                                    case "skew":
                                        f = !/(deg|\d)$/i.test(e);
                                        break;
                                    case "rotate":
                                        f = !/(deg|\d)$/i.test(e)
                                }
                                return f || (q.data(c, n).transformCache[a] = "(" + e + ")"), q.data(c, n).transformCache[a]
                        }
                    }
                }();
                for (var f = ["color", "backgroundColor", "borderColor", "borderTopColor", "borderRightColor", "borderBottomColor", "borderLeftColor", "outlineColor"], c = 0, g = f.length; g > c; c++)! function() {
                    var b = f[c];
                    s.Normalizations.registered[b] = function(c, e, f) {
                        switch (c) {
                            case "name":
                                return b;
                            case "extract":
                                var g;
                                if (s.RegEx.wrappedValueAlreadyExtracted.test(f)) g = f;
                                else {
                                    var h, i = {
                                            aqua: "rgb(0, 255, 255);",
                                            black: "rgb(0, 0, 0)",
                                            blue: "rgb(0, 0, 255)",
                                            fuchsia: "rgb(255, 0, 255)",
                                            gray: "rgb(128, 128, 128)",
                                            green: "rgb(0, 128, 0)",
                                            lime: "rgb(0, 255, 0)",
                                            maroon: "rgb(128, 0, 0)",
                                            navy: "rgb(0, 0, 128)",
                                            olive: "rgb(128, 128, 0)",
                                            purple: "rgb(128, 0, 128)",
                                            red: "rgb(255, 0, 0)",
                                            silver: "rgb(192, 192, 192)",
                                            teal: "rgb(0, 128, 128)",
                                            white: "rgb(255, 255, 255)",
                                            yellow: "rgb(255, 255, 0)"
                                        };
                                    /^[A-z]+$/i.test(f) ? h = i[f] !== d ? i[f] : i.black : /^#([A-f\d]{3}){1,2}$/i.test(f) ? h = a(f) : /^rgba?\(/i.test(f) || (h = i.black), g = (h || f).toString().match(s.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g, " ")
                                }
                                return 8 >= o || 3 !== g.split(" ").length || (g += " 1"), g;
                            case "inject":
                                return 8 >= o ? 4 === f.split(" ").length && (f = f.split(/\s+/).slice(0, 3).join(" ")) : 3 === f.split(" ").length && (f += " 1"), (8 >= o ? "rgb" : "rgba") + "(" + f.replace(/\s+/g, ",").replace(/\.(\d)+(?=,)/g, "") + ")"
                        }
                    }
                }()
            }
        },
        Names: {
            camelCase: function(a) {
                return a.replace(/-(\w)/g, function(a, b) {
                    return b.toUpperCase()
                })
            },
            prefixCheck: function(a) {
                if (r.State.prefixMatches[a]) return [r.State.prefixMatches[a], !0];
                for (var b = ["", "Webkit", "Moz", "ms", "O"], c = 0, d = b.length; d > c; c++) {
                    var e;
                    if (e = 0 === c ? a : b[c] + a.replace(/^\w/, function(a) {
                        return a.toUpperCase()
                    }), "string" == typeof r.State.prefixElement.style[e]) return r.State.prefixMatches[a] = e, [e, !0]
                }
                return [a, !1]
            }
        },
        Values: {
            isCSSNullValue: function(a) {
                return 0 == a || /^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(a)
            },
            getUnitType: function(a) {
                return /^(rotate|skew)/i.test(a) ? "deg" : /(^(scale|scaleX|scaleY|scaleZ|opacity|alpha|fillOpacity|flexGrow|flexHeight|zIndex|fontWeight)$)|color/i.test(a) ? "" : "px"
            },
            getDisplayType: function(a) {
                var b = a.tagName.toString().toLowerCase();
                return /^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(b) ? "inline" : /^(li)$/i.test(b) ? "list-item" : "block"
            }
        },
        getPropertyValue: function(a, c, e, f) {
            function g(a, c) {
                var e = 0;
                if (8 >= o) e = q.css(a, c);
                else {
                    if (!f) {
                        if ("height" === c && "border-box" !== s.getPropertyValue(a, "boxSizing").toString().toLowerCase()) return a.offsetHeight - (parseFloat(s.getPropertyValue(a, "borderTopWidth")) || 0) - (parseFloat(s.getPropertyValue(a, "borderBottomWidth")) || 0) - (parseFloat(s.getPropertyValue(a, "paddingTop")) || 0) - (parseFloat(s.getPropertyValue(a, "paddingBottom")) || 0);
                        if ("width" === c && "border-box" !== s.getPropertyValue(a, "boxSizing").toString().toLowerCase()) return a.offsetWidth - (parseFloat(s.getPropertyValue(a, "borderLeftWidth")) || 0) - (parseFloat(s.getPropertyValue(a, "borderRightWidth")) || 0) - (parseFloat(s.getPropertyValue(a, "paddingLeft")) || 0) - (parseFloat(s.getPropertyValue(a, "paddingRight")) || 0)
                    }
                    var h;
                    h = q.data(a, n) === d ? b.getComputedStyle(a, null) : q.data(a, n).computedStyle ? q.data(a, n).computedStyle : q.data(a, n).computedStyle = b.getComputedStyle(a, null), o && "borderColor" === c && (c = "borderTopColor"), e = 9 === o && "filter" === c ? h.getPropertyValue(c) : h[c], ("" === e || null === e) && (e = a.style[c])
                } if ("auto" === e && /^(top|right|bottom|left)$/i.test(c)) {
                    var i = g(a, "position");
                    ("fixed" === i || "absolute" === i && /top|left/i.test(c)) && (e = q(a).position()[c] + "px")
                }
                return e
            }
            var h;
            if (s.Hooks.registered[c]) {
                var i = c,
                    j = s.Hooks.getRoot(i);
                e === d && (e = s.getPropertyValue(a, s.Names.prefixCheck(j)[0])), s.Normalizations.registered[j] && (e = s.Normalizations.registered[j]("extract", a, e)), h = s.Hooks.extractValue(i, e)
            } else if (s.Normalizations.registered[c]) {
                var k, l;
                k = s.Normalizations.registered[c]("name", a), "transform" !== k && (l = g(a, s.Names.prefixCheck(k)[0]), s.Values.isCSSNullValue(l) && s.Hooks.templates[c] && (l = s.Hooks.templates[c][1])), h = s.Normalizations.registered[c]("extract", a, l)
            }
            return /^[\d-]/.test(h) || (h = g(a, s.Names.prefixCheck(c)[0])), s.Values.isCSSNullValue(h) && (h = 0), r.debug >= 2 && console.log("Get " + c + ": " + h), h
        },
        setPropertyValue: function(a, c, d, e, f) {
            var g = c;
            if ("scroll" === c) f.container ? f.container["scroll" + f.direction] = d : "Left" === f.direction ? b.scrollTo(d, f.alternateValue) : b.scrollTo(f.alternateValue, d);
            else if (s.Normalizations.registered[c] && "transform" === s.Normalizations.registered[c]("name", a)) s.Normalizations.registered[c]("inject", a, d), g = "transform", d = q.data(a, n).transformCache[c];
            else {
                if (s.Hooks.registered[c]) {
                    var h = c,
                        i = s.Hooks.getRoot(c);
                    e = e || s.getPropertyValue(a, i), d = s.Hooks.injectValue(h, d, e), c = i
                }
                if (s.Normalizations.registered[c] && (d = s.Normalizations.registered[c]("inject", a, d), c = s.Normalizations.registered[c]("name", a)), g = s.Names.prefixCheck(c)[0], 8 >= o) try {
                    a.style[g] = d
                } catch (j) {
                    console.log("Error setting [" + g + "] to [" + d + "]")
                } else a.style[g] = d;
                r.debug >= 2 && console.log("Set " + c + " (" + g + "): " + d)
            }
            return [g, d]
        },
        flushTransformCache: function(a) {
            var b, c, d, e = "";
            for (b in q.data(a, n).transformCache) c = q.data(a, n).transformCache[b], "transformPerspective" !== b ? (9 === o && "rotateZ" === b && (b = "rotate"), e += b + c + " ") : d = c;
            d && (e = "perspective" + d + " " + e), s.setPropertyValue(a, "transform", e)
        }
    };
    s.Hooks.register(), s.Normalizations.register(), r.animate = function() {
        function a() {
            function a() {
                function a(a) {
                    var c = d,
                        e = d,
                        i = d;
                    return g(a) ? (c = a[0], !g(a[1]) && /^[\d-]/.test(a[1]) || f(a[1]) ? i = a[1] : ("string" == typeof a[1] || g(a[1])) && (e = k(a[1], h.duration), a[2] && (i = a[2]))) : c = a, e = e || h.easing, f(c) && (c = c.call(b, u, t)), f(i) && (i = i.call(b, u, t)), [c || 0, e, i]
                }

                function v(a, b) {
                    var c, d;
                    return d = (b || 0).toString().toLowerCase().replace(/[%A-z]+$/, function(a) {
                        return c = a, ""
                    }), c || (c = s.Values.getUnitType(a)), [d, c]
                }

                function w() {
                    var a = {
                        parent: b.parentNode,
                        position: s.getPropertyValue(b, "position"),
                        fontSize: s.getPropertyValue(b, "fontSize")
                    }, d = a.position === y.lastPosition && a.parent === y.lastParent,
                        e = a.fontSize === y.lastFontSize && a.parent === y.lastParent;
                    y.lastParent = a.parent, y.lastPosition = a.position, y.lastFontSize = a.fontSize, null === y.remToPxRatio && (y.remToPxRatio = parseFloat(s.getPropertyValue(c.body, "fontSize")) || 16);
                    var f = {
                        overflowX: null,
                        overflowY: null,
                        boxSizing: null,
                        width: null,
                        minWidth: null,
                        maxWidth: null,
                        height: null,
                        minHeight: null,
                        maxHeight: null,
                        paddingLeft: null
                    }, g = {}, h = 10;
                    if (g.remToPxRatio = y.remToPxRatio, o) var i = /^auto$/i.test(b.currentStyle.width),
                    j = /^auto$/i.test(b.currentStyle.height);
                    d && e || (f.overflowX = s.getPropertyValue(b, "overflowX"), f.overflowY = s.getPropertyValue(b, "overflowY"), f.boxSizing = s.getPropertyValue(b, "boxSizing"), f.width = s.getPropertyValue(b, "width", null, !0), f.minWidth = s.getPropertyValue(b, "minWidth"), f.maxWidth = s.getPropertyValue(b, "maxWidth") || "none", f.height = s.getPropertyValue(b, "height", null, !0), f.minHeight = s.getPropertyValue(b, "minHeight"), f.maxHeight = s.getPropertyValue(b, "maxHeight") || "none", f.paddingLeft = s.getPropertyValue(b, "paddingLeft")), d ? (g.percentToPxRatioWidth = y.lastPercentToPxWidth, g.percentToPxRatioHeight = y.lastPercentToPxHeight) : (s.setPropertyValue(b, "overflowX", "hidden"), s.setPropertyValue(b, "overflowY", "hidden"), s.setPropertyValue(b, "boxSizing", "content-box"), s.setPropertyValue(b, "width", h + "%"), s.setPropertyValue(b, "minWidth", h + "%"), s.setPropertyValue(b, "maxWidth", h + "%"), s.setPropertyValue(b, "height", h + "%"), s.setPropertyValue(b, "minHeight", h + "%"), s.setPropertyValue(b, "maxHeight", h + "%")), e ? g.emToPxRatio = y.lastEmToPx : s.setPropertyValue(b, "paddingLeft", h + "em"), d || (g.percentToPxRatioWidth = y.lastPercentToPxWidth = (parseFloat(s.getPropertyValue(b, "width", null, !0)) || 1) / h, g.percentToPxRatioHeight = y.lastPercentToPxHeight = (parseFloat(s.getPropertyValue(b, "height", null, !0)) || 1) / h), e || (g.emToPxRatio = y.lastEmToPx = (parseFloat(s.getPropertyValue(b, "paddingLeft")) || 1) / h);
                    for (var k in f) null !== f[k] && s.setPropertyValue(b, k, f[k]);
                    return o ? (i && s.setPropertyValue(b, "width", "auto"), j && s.setPropertyValue(b, "height", "auto")) : (s.setPropertyValue(b, "height", "auto"), f.height !== s.getPropertyValue(b, "height", null, !0) && s.setPropertyValue(b, "height", f.height), s.setPropertyValue(b, "width", "auto"), f.width !== s.getPropertyValue(b, "width", null, !0) && s.setPropertyValue(b, "width", f.width)), r.debug >= 1 && console.log("Unit ratios: " + JSON.stringify(g), b), g
                }
                if (0 === u && p && f(p.begin)) {
                    var A = j.jquery ? j.get() : j;
                    p.begin.call(A, A)
                }
                if ("scroll" === x) {
                    var B, C, D, E = /^x$/i.test(h.axis) ? "Left" : "Top",
                        F = parseFloat(h.offset) || 0;
                    h.container ? h.container.jquery || h.container.nodeType ? (h.container = h.container[0] || h.container, B = h.container["scroll" + E], D = B + q(b).position()[E.toLowerCase()] + F) : h.container = null : (B = r.State.scrollAnchor[r.State["scrollProperty" + E]], C = r.State.scrollAnchor[r.State["scrollProperty" + ("Left" === E ? "Top" : "Left")]], D = q(b).offset()[E.toLowerCase()] + F), i = {
                        scroll: {
                            rootPropertyValue: !1,
                            startValue: B,
                            currentValue: B,
                            endValue: D,
                            unitType: "",
                            easing: h.easing,
                            scrollData: {
                                container: h.container,
                                direction: E,
                                alternateValue: C
                            }
                        },
                        element: b
                    }
                } else if ("reverse" === x) {
                    if (!q.data(b, n).tweensContainer) return void q.dequeue(b, h.queue);
                    "none" === q.data(b, n).opts.display && (q.data(b, n).opts.display = "block"), q.data(b, n).opts.loop = !1, q.data(b, n).opts.begin = null, q.data(b, n).opts.complete = null, h = q.extend({}, q.data(b, n).opts, p);
                    var G = q.extend(!0, {}, q.data(b, n).tweensContainer);
                    for (var H in G)
                        if ("element" !== H) {
                            var I = G[H].startValue;
                            G[H].startValue = G[H].currentValue = G[H].endValue, G[H].endValue = I, p && (G[H].easing = h.easing)
                        }
                    i = G
                } else if ("start" === x) {
                    var G;
                    q.data(b, n).tweensContainer && q.data(b, n).isAnimating === !0 && (G = q.data(b, n).tweensContainer);
                    for (var J in m) {
                        var K = a(m[J]),
                            L = K[0],
                            M = K[1],
                            N = K[2];
                        J = s.Names.camelCase(J);
                        var O = s.Hooks.getRoot(J),
                            P = !1;
                        if (s.Names.prefixCheck(O)[1] !== !1 || s.Normalizations.registered[O] !== d) {
                            h.display && "none" !== h.display && /opacity|filter/.test(J) && !N && 0 !== L && (N = 0), h._cacheValues && G && G[J] ? (N === d && (N = G[J].endValue + G[J].unitType), P = q.data(b, n).rootPropertyValueCache[O]) : s.Hooks.registered[J] ? N === d ? (P = s.getPropertyValue(b, O), N = s.getPropertyValue(b, J, P)) : P = s.Hooks.templates[O][1] : N === d && (N = s.getPropertyValue(b, J));
                            var Q, R, S, T;
                            Q = v(J, N), N = Q[0], S = Q[1], Q = v(J, L), L = Q[0].replace(/^([+-\/*])=/, function(a, b) {
                                return T = b, ""
                            }), R = Q[1], N = parseFloat(N) || 0, L = parseFloat(L) || 0;
                            var U;
                            if ("%" === R && (/^(fontSize|lineHeight)$/.test(J) ? (L /= 100, R = "em") : /^scale/.test(J) ? (L /= 100, R = "") : /(Red|Green|Blue)$/i.test(J) && (L = L / 100 * 255, R = "")), /[\/*]/.test(T)) R = S;
                            else if (S !== R && 0 !== N)
                                if (0 === L) R = S;
                                else {
                                    U = U || w();
                                    var V = /margin|padding|left|right|width|text|word|letter/i.test(J) || /X$/.test(J) ? "x" : "y";
                                    switch (S) {
                                        case "%":
                                            N *= "x" === V ? U.percentToPxRatioWidth : U.percentToPxRatioHeight;
                                            break;
                                        case "em":
                                            N *= U.emToPxRatio;
                                            break;
                                        case "rem":
                                            N *= U.remToPxRatio;
                                            break;
                                        case "px":
                                    }
                                    switch (R) {
                                        case "%":
                                            N *= 1 / ("x" === V ? U.percentToPxRatioWidth : U.percentToPxRatioHeight);
                                            break;
                                        case "em":
                                            N *= 1 / U.emToPxRatio;
                                            break;
                                        case "rem":
                                            N *= 1 / U.remToPxRatio;
                                            break;
                                        case "px":
                                    }
                                }
                            switch (T) {
                                case "+":
                                    L = N + L;
                                    break;
                                case "-":
                                    L = N - L;
                                    break;
                                case "*":
                                    L = N * L;
                                    break;
                                case "/":
                                    L = N / L
                            }
                            i[J] = {
                                rootPropertyValue: P,
                                startValue: N,
                                currentValue: N,
                                endValue: L,
                                unitType: R,
                                easing: M
                            }, r.debug && console.log("tweensContainer (" + J + "): " + JSON.stringify(i[J]), b)
                        } else r.debug && console.log("Skipping [" + O + "] due to a lack of browser support.")
                    }
                    i.element = b
                }
                i.element && (z.push(i), q.data(b, n).tweensContainer = i, q.data(b, n).opts = h, q.data(b, n).isAnimating = !0, u === t - 1 ? (r.State.calls.length > 1e4 && (r.State.calls = e(r.State.calls)), r.State.calls.push([z, j, h]), r.State.isTicking === !1 && (r.State.isTicking = !0, l())) : u++)
            }
            var b = this,
                h = q.extend({}, r.defaults, p),
                i = {};
            if ("stop" === x) return q.queue(b, "string" == typeof p ? p : "", []), !0;
            switch (q.data(b, n) === d && q.data(b, n, {
                isAnimating: !1,
                computedStyle: null,
                tweensContainer: null,
                rootPropertyValueCache: {},
                transformCache: {}
            }), /^\d/.test(h.delay) && q.queue(b, h.queue, function(a) {
                r.velocityQueueEntryFlag = !0, setTimeout(a, parseFloat(h.delay))
            }), h.duration.toString().toLowerCase()) {
                case "fast":
                    h.duration = 200;
                    break;
                case "normal":
                    h.duration = 400;
                    break;
                case "slow":
                    h.duration = 600;
                    break;
                default:
                    h.duration = parseFloat(h.duration) || 1
            }
            h.easing = k(h.easing, h.duration), p && p.complete && !f(p.complete) && (p.complete = null), h.display && (h.display = h.display.toString().toLowerCase()), h.mobileHA = h.mobileHA && r.State.isMobile, h.queue === !1 ? a() : q.queue(b, h.queue, function(b) {
                r.velocityQueueEntryFlag = !0, a(b)
            }), "" !== h.queue && "fx" !== h.queue || "inprogress" === q.queue(b)[0] || q.dequeue(b)
        }
        var i, j, m, p;
        this.jquery || b.Zepto && b.Zepto.zepto.isZ(this) ? (i = !0, j = this, m = arguments[0], p = arguments[1]) : (i = !1, j = arguments[0].jquery ? [].slice.call(arguments[0]) : arguments[0], m = arguments[1], p = arguments[2]);
        var t = h(j) || g(j) ? j.length : 1,
            u = 0;
        if ("stop" !== m && !q.isPlainObject(p)) {
            var v = i ? 1 : 2;
            p = {};
            for (var w = v; w < arguments.length; w++)!g(arguments[w]) && /^\d/.test(arguments[w]) ? p.duration = parseFloat(arguments[w]) : "string" == typeof arguments[w] ? p.easing = arguments[w] : !g(arguments[w]) || 2 !== arguments[w].length && 4 !== arguments[w].length ? f(arguments[w]) && (p.complete = arguments[w]) : p.easing = arguments[w]
        }
        var x;
        switch (m) {
            case "scroll":
                x = "scroll";
                break;
            case "reverse":
                x = "reverse";
                break;
            case "stop":
                x = "stop";
                break;
            default:
                if (!q.isPlainObject(m) || q.isEmptyObject(m)) return "string" == typeof m && r.Sequences[m] ? (q.each(j, function(a, b) {
                    r.Sequences[m].call(b, b, p || {}, a, t)
                }), j) : (r.debug && console.log("First argument was not a property map, a known action, or a registered sequence. Aborting."), j);
                x = "start"
        }
        var y = {
            lastParent: null,
            lastPosition: null,
            lastFontSize: null,
            lastPercentToPxWidth: null,
            lastPercentToPxHeight: null,
            lastEmToPx: null,
            remToPxRatio: null
        }, z = [];
        if (i) j.each(a);
        else if (1 === t && j.nodeType) a.call(j);
        else
            for (var A in j) j[A].nodeType && a.call(j[A]);
        var B, C = q.extend({}, r.defaults, p);
        if (C.loop = parseInt(C.loop), B = 2 * C.loop - 1, C.loop)
            for (var D = 0; B > D; D++) {
                var E = {
                    delay: C.delay
                };
                C.complete && D === B - 1 && (E.complete = C.complete), i ? j.velocity("reverse", E) : r.animate(j, "reverse", E)
            }
        return j
    };
    var t = b.jQuery || b.Zepto;
    t && (t.fn.velocity = r.animate, t.fn.velocity.defaults = r.defaults), q.each(["Down", "Up"], function(a, b) {
        r.Sequences["slide" + b] = function(a, c) {
            var d = q.extend({}, c),
                e = {
                    height: null,
                    marginTop: null,
                    marginBottom: null,
                    paddingTop: null,
                    paddingBottom: null,
                    overflow: null,
                    overflowX: null,
                    overflowY: null
                }, f = d.begin,
                g = d.complete,
                h = !1;
            d.display = "Down" === b ? d.display || "block" : d.display || "none", d.begin = function() {
                function c() {
                    a.style.display = "block", e.height = r.CSS.getPropertyValue(a, "height"), a.style.height = "auto", r.CSS.getPropertyValue(a, "height") === e.height && (h = !0), r.CSS.setPropertyValue(a, "height", e.height + "px")
                }
                if ("Down" === b) {
                    e.overflow = [r.CSS.getPropertyValue(a, "overflow"), 0], e.overflowX = [r.CSS.getPropertyValue(a, "overflowX"), 0], e.overflowY = [r.CSS.getPropertyValue(a, "overflowY"), 0], a.style.overflow = "hidden", a.style.overflowX = "visible", a.style.overflowY = "hidden", c();
                    for (var d in e) /^overflow/.test(d) || (e[d] = [r.CSS.getPropertyValue(a, d), 0]);
                    a.style.display = "none"
                } else {
                    c();
                    for (var d in e) e[d] = [0, r.CSS.getPropertyValue(a, d)];
                    a.style.overflow = "hidden", a.style.overflowX = "visible", a.style.overflowY = "hidden"
                }
                f && f.call(a, a)
            }, d.complete = function(a) {
                var c = "Down" === b ? 0 : 1;
                h === !0 ? e.height[c] = "auto" : e.height[c] += "px";
                for (var d in e) a.style[d] = e[d][c];
                g && g.call(a, a)
            }, r.animate(a, e, d)
        }
    }), q.each(["In", "Out"], function(a, b) {
        r.Sequences["fade" + b] = function(a, c, d, e) {
            var f = q.extend({}, c),
                g = {
                    opacity: "In" === b ? 1 : 0
                };
            d !== e - 1 && (f.complete = f.begin = null), f.display || (f.display = "In" === b ? r.CSS.Values.getDisplayType(a) : "none"), r.animate(this, g, f)
        }
    })
}(window.jQuery || window.Zepto || window, window, document);